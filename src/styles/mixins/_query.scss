@import './media';
@import './devices';

// MOBILE
@mixin mobile($device, $model, $orientation) {
	@if $device == "galaxy" {
		@include galaxy($model, $orientation) {
			@content;
		}
	} @else if $device == "pixel" {
		@include pixel($model, $orientation) {
			@content;
		}
	} @else if $device == "nexus" {
		@include nexus($model, $orientation) {
			@content;
		}
	} @else {
		@include iphone($model, $orientation) {
			@content;
		}
	}
}

// TABLET
@mixin tablet($device, $model, $orientation) {
	@if $device == "galaxy" {
		@include galaxy_t($model, $orientation) {
			@content;
		}
	} @else if $device == "nexus" {
		@include nexus_t($model, $orientation) {
			@content;
		}
	} @else if $device == "kindle" {
		@include kindle($model, $orientation) {
			@content;
		}
	} @else {
		@include ipad($model, $orientation) {
			@content;
		}
	}
}

// Media queries for standard devices
// See more https://css-tricks.com/snippets/css/media-queries-for-standard-devices/
// It has rounded up media queries that can be used to target designs
// for many standard and popular devices that is certainly worth a read.
// $devices ["none", "iphone", "galaxy", "nexus", "pixel", "ipad", "kindle", "retina"] — default will be laptop without retina
// $model —  it depends on $devise. See more in './devices.scss'
// $type ["mobile", "tablet", "laptop"]
// $orientation ["none", "portrait", "landscape"]
@mixin query($type: "mobile", $device: 'iphone', $model: 'X', $orientation: "none") {
	@if $type == "mobile" {
		@include mobile($device, $model, $orientation) {
			@content;
		}
	} @else if $type == "tablet" {
		@include tablet($device, $model, $orientation) {
			@content;
		}
	} @else if $type == "laptop" {
		@if ($device == 'retina') {
			@media screen and (min-device-width: 1200px) and (max-device-width: 1600px) and (-webkit-min-device-pixel-ratio: 2)and (min-resolution: 192dpi) { 
				@content;
			}
		} @else {
			@media screen and (min-device-width: 1200px) and (max-device-width: 1600px) and (-webkit-min-device-pixel-ratio: 1) {
				@content;
			}
		}
	}
}
